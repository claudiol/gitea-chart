--- gitea/values.yaml	2023-11-27 14:02:43.000000000 -0700
+++ ../values.yaml	2024-01-27 10:53:05.598524048 -0700
@@ -16,6 +16,10 @@ global:
   imagePullSecrets: []
   storageClass: ""
   hostAliases: []
+  openshift: 
+    enable: true
+    route:
+      hostname: git
   # - ip: 192.168.137.2
   #   hostnames:
   #   - example.com
@@ -60,15 +64,15 @@ imagePullSecrets: []
 ## @section Security
 # Security context is only usable with rootless image due to image design
 ## @param podSecurityContext.fsGroup Set the shared file system group for all containers in the pod.
-podSecurityContext:
-  fsGroup: 1000
+podSecurityContext: {}
+  #fsGroup: 1000
 
 ## @param containerSecurityContext Security context
-containerSecurityContext: {}
-#   allowPrivilegeEscalation: false
-#   capabilities:
-#     drop:
-#       - ALL
+containerSecurityContext: 
+  allowPrivilegeEscalation: false
+  capabilities:
+    drop:
+      - ALL
 #   # Add the SYS_CHROOT capability for root and rootless images if you intend to
 #   # run pods on nodes that use the container runtime cri-o. Otherwise, you will
 #   # get an error message from the SSH server that it is not possible to read from
@@ -76,10 +80,10 @@ containerSecurityContext: {}
 #   # https://gitea.com/gitea/helm-chart/issues/161
 #     add:
 #       - SYS_CHROOT
-#   privileged: false
+  privileged: false
 #   readOnlyRootFilesystem: true
 #   runAsGroup: 1000
-#   runAsNonRoot: true
+  runAsNonRoot: true
 #   runAsUser: 1000
 
 ## @deprecated The securityContext variable has been split two:
@@ -109,7 +113,7 @@ service:
   http:
     type: ClusterIP
     port: 3000
-    clusterIP: None
+      #    clusterIP: None
     loadBalancerIP:
     nodePort:
     externalTrafficPolicy:
@@ -133,7 +137,7 @@ service:
   ssh:
     type: ClusterIP
     port: 22
-    clusterIP: None
+      # clusterIP: None
     loadBalancerIP:
     nodePort:
     externalTrafficPolicy:
@@ -506,7 +510,7 @@ postgresql-ha:
       database: gitea
       password: gitea
       username: gitea
-  enabled: true
+  enabled: false
   postgresql:
     repmgrPassword: changeme2
     postgresPassword: changeme1
@@ -529,7 +533,7 @@ postgresql-ha:
 ## @param postgresql.global.postgresql.service.ports.postgresql PostgreSQL service port (overrides `service.ports.postgresql`)
 ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
 postgresql:
-  enabled: false
+  enabled: true
   global:
     postgresql:
       auth:
